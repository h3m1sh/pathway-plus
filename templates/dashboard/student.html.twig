{% extends 'base.html.twig' %}

{% block title %}Dashboard - Pathway+{% endblock %}

{% block body %}



<!-- Dashboard Header -->
<div class="dashboard-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-2">
                    <i class="bi bi-sun me-2"></i>
                    Good {% if date().format('H') < 12 %}morning{% elseif date().format('H') < 17 %}afternoon{% else %}evening{% endif %}, {{ user.firstName }}!
                </h1>
                <p class="mb-0 opacity-90">
                    Ready to continue your learning journey? Here's your progress overview.
                </p>
            </div>
            <div class="col-md-4 text-md-end">
                <div class="d-flex justify-content-md-end justify-content-start mt-3 mt-md-0">
                    <div class="text-center me-4">
                        <div class="h3 mb-0">{{ stats.completedCredentials }}</div>
                        <small class="opacity-75">Completed</small>
                    </div>
                    <div class="text-center me-4">
                        <div class="h3 mb-0">{{ stats.completionRate }}%</div>
                        <small class="opacity-75">Success Rate</small>
                    </div>
                    <div class="text-center">
                        <div class="h3 mb-0">{{ stats.careerGoals }}</div>
                        <small class="opacity-75">Career Goals</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Quick Actions Bar -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card widget-card">
                <div class="card-body py-3">
                    <div class="d-flex flex-wrap gap-2 align-items-center">
                        <span class="text-muted me-3">
                            <i class="bi bi-lightning-charge me-1"></i>Quick Actions:
                        </span>
                        <button class="btn btn-outline-primary btn-sm" onclick="scrollToWidget('skillPassport')">
                            <i class="bi bi-award me-1"></i>View Credentials
                        </button>
                        <button class="btn btn-outline-success btn-sm" onclick="scrollToWidget('careerPath')">
                            <i class="bi bi-map me-1"></i>Career Progress
                        </button>
                        <button class="btn btn-outline-warning btn-sm" onclick="scrollToWidget('suggestions')">
                            <i class="bi bi-lightbulb me-1"></i>Get Suggestions
                        </button>
                        <a href="{{ path('app_profile') }}" class="btn btn-outline-secondary btn-sm">
                            <i class="bi bi-person-gear me-1"></i>Edit Profile
                        </a>
                        <div class="ms-auto">
                            <button class="btn btn-outline-primary btn-sm" id="customizeLayout" title="Customize Dashboard">
                                <i class="bi bi-grid-3x3-gap me-1"></i>Customize
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Customization Controls (Hidden by default) -->
    <div class="row mb-4" id="customizationControls" style="display: none;">
        <div class="col-12">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-0">
                        <i class="bi bi-gear me-2"></i>Dashboard Customization
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <p class="mb-2 text-muted">
                                <i class="bi bi-info-circle me-1"></i>
                                Drag widgets to reorder them. Use the controls below to show/hide widgets.
                            </p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <div class="btn-group" role="group">
                                <button class="btn btn-outline-success btn-sm" onclick="saveCustomization()">
                                    <i class="bi bi-check me-1"></i>Save Layout
                                </button>
                                <button class="btn btn-outline-secondary btn-sm" onclick="resetCustomization()">
                                    <i class="bi bi-arrow-clockwise me-1"></i>Reset
                                </button>
                                <button class="btn btn-outline-danger btn-sm" onclick="exitCustomization()">
                                    <i class="bi bi-x me-1"></i>Exit
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Widget Visibility Controls -->
                    <div class="row mt-3">
                        <div class="col-12">
                            <h6 class="text-muted mb-2">Widget Visibility:</h6>
                            <div class="d-flex flex-wrap gap-2" id="widgetControls">
                                <!-- Widget controls will be populated by JavaScript -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Widget Grid -->
    <div class="row" id="widgetGrid">
        <!-- Profile + Skill Passport -->
        <div class="col-lg-4 col-md-6 mb-4 widget-item" data-widget="profile" draggable="true">
            <div class="card widget-card" id="profileWidget">
                <div class="widget-header">
                    <h5 class="widget-title">
                        <i class="bi bi-person-badge me-2"></i>Profile Overview
                    </h5>
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-outline-secondary" onclick="toggleWidget('profile')" title="Hide Widget">
                            <i class="bi bi-eye-slash"></i>
                        </button>
                    </div>
                </div>
                <div class="widget-body">
                    <div class="text-center mb-3">
                        {% if user.avatarUrl %}
                            <img src="{{ user.avatarUrl }}" alt="{{ user.fullName }}"
                                 class="rounded-circle mb-2" style="width: 80px; height: 80px; object-fit: cover;">
                        {% else %}
                            <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center mx-auto mb-2"
                                 style="width: 80px; height: 80px; font-size: 2rem;">
                                {{ user.firstName|slice(0,1) }}{{ user.lastName|slice(0,1) }}
                            </div>
                        {% endif %}
                        <h6 class="mb-1">{{ user.fullName }}</h6>
                        {% if user.studentId %}
                            <small class="text-muted">ID: {{ user.studentId }}</small>
                        {% endif %}
                    </div>

                    <div class="row text-center">
                        <div class="col-4">
                            <div class="fw-bold text-primary">{{ stats.totalCredentials }}</div>
                            <small class="text-muted">Total</small>
                        </div>
                        <div class="col-4">
                            <div class="fw-bold text-success">{{ stats.completedCredentials }}</div>
                            <small class="text-muted">Earned</small>
                        </div>
                        <div class="col-4">
                            <div class="fw-bold text-warning">{{ stats.careerGoals }}</div>
                            <small class="text-muted">Goals</small>
                        </div>
                    </div>

                    {% if careerInterests|length > 0 %}
                        <hr>
                        <h6 class="text-muted mb-2">Career Interests</h6>
                        {% for interest in careerInterests|slice(0, 3) %}
                            <div class="badge bg-light text-dark border mb-1 me-1">
                                {{ interest.title }}
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
        </div>

        <div class="col-lg-8 col-md-6 mb-4 widget-item" data-widget="skillPassport" draggable="true">
            <div class="card widget-card" id="skillPassport">
                <div class="widget-header d-flex justify-content-between align-items-center">
                    <h5 class="widget-title">
                        <i class="bi bi-award me-2"></i>Skill Passport
                    </h5>
                    <div class="d-flex align-items-center">
                        <div class="btn-group btn-group-sm me-2" role="group">
                            <button type="button" class="btn btn-outline-secondary active" data-view="grid">
                                <i class="bi bi-grid"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" data-view="list">
                                <i class="bi bi-list"></i>
                            </button>
                        </div>
                        <div class="widget-controls" style="display: none;">
                            <button class="btn btn-sm btn-outline-secondary" onclick="toggleWidget('skillPassport')" title="Hide Widget">
                                <i class="bi bi-eye-slash"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="widget-body">
                    {% if studentProgress|length > 0 %}
                        <div class="row" id="credentialGrid">
                            {% for progress in studentProgress|slice(0, 6) %}
                                <div class="col-md-4 col-sm-6 mb-3">
                                    <div class="card border-0 bg-light h-100">
                                        <div class="card-body text-center p-3">
                                            {% if progress.microCredential.badgeUrl %}
                                                <img src="{{ progress.microCredential.badgeUrl }}"
                                                     alt="{{ progress.microCredential.name }}"
                                                     class="mb-2" style="width: 40px; height: 40px; object-fit: cover;">
                                            {% else %}
                                                <i class="bi bi-award-fill text-primary mb-2" style="font-size: 2rem;"></i>
                                            {% endif %}
                                            <h6 class="card-title mb-1" style="font-size: 0.9rem;">
                                                {{ progress.microCredential.name }}
                                            </h6>
                                            <small class="text-muted">
                                                {{ progress.dateEarned.format('M Y') }}
                                            </small>
                                            <div class="mt-2">
                                                {% if progress.status == 'Completed' or progress.status == 'Verified' %}
                                                    <span class="badge bg-success">{{ progress.status }}</span>
                                                {% elseif progress.status == 'In Progress' %}
                                                    <span class="badge bg-warning">{{ progress.status }}</span>
                                                {% else %}
                                                    <span class="badge bg-secondary">{{ progress.status }}</span>
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                        {% if studentProgress|length > 6 %}
                            <div class="text-center mt-3">
                                <button class="btn btn-outline-primary btn-sm" onclick="showAllCredentials()">
                                    View All {{ studentProgress|length }} Credentials
                                </button>
                            </div>
                        {% endif %}
                    {% else %}
                        <div class="text-center py-4">
                            <i class="bi bi-award text-muted" style="font-size: 3rem;"></i>
                            <h6 class="text-muted mt-2">No credentials yet</h6>
                            <p class="text-muted mb-3">Start your learning journey to earn your first micro-credential!</p>
                            <button class="btn btn-primary btn-sm">
                                <i class="bi bi-search me-1"></i>Browse Available Credentials
                            </button>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Recently Earned Timeline -->
        <div class="col-12 mb-4 widget-item" data-widget="recentActivity" draggable="true">
            <div class="card widget-card" id="recentActivity">
                <div class="widget-header">
                    <h5 class="widget-title">
                        <i class="bi bi-clock-history me-2"></i>Recent Activity
                        <small class="text-muted">(Last 30 days)</small>
                    </h5>
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-outline-secondary" onclick="toggleWidget('recentActivity')" title="Hide Widget">
                            <i class="bi bi-eye-slash"></i>
                        </button>
                    </div>
                </div>
                <div class="widget-body">
                    {% if recentProgress|length > 0 %}
                        <div class="timeline">
                            {% for progress in recentProgress|slice(0, 5) %}
                                <div class="timeline-item d-flex align-items-start mb-4">
                                    <div class="timeline-marker rounded-circle d-flex align-items-center justify-content-center me-3"
                                         style="width: 40px; height: 40px; min-width: 40px; background: linear-gradient(135deg, var(--electric-blue) 0%, var(--sky-blue) 100%);">
                                        {% if progress.type == 'credential' %}
                                            <i class="bi bi-award text-white"></i>
                                        {% elseif progress.type == 'skill' %}
                                            <i class="bi bi-star text-white"></i>
                                        {% elseif progress.type == 'profile' %}
                                            <i class="bi bi-person text-white"></i>
                                        {% else %}
                                            <i class="bi bi-flag text-white"></i>
                                        {% endif %}
                                    </div>
                                    <div class="timeline-content flex-grow-1">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                {% if progress.type == 'credential' %}
                                                    <h6 class="mb-1">{{ progress.microCredential.name }}</h6>
                                                    <p class="text-muted mb-1">
                                                        Earned {{ progress.microCredential.category }} credential
                                                        {% if progress.verifiedBy %}
                                                            • Verified by {{ progress.verifiedBy }}
                                                        {% endif %}
                                                    </p>
                                                    {% if progress.dateEarned|date('Y-m-d') == "now"|date('Y-m-d') %}
                                                        <div class="alert alert-success py-2 px-3 mb-2" style="font-size: 0.9rem;">
                                                            <i class="bi bi-trophy me-1"></i>Congratulations on earning this credential!
                                                        </div>
                                                    {% endif %}
                                                {% elseif progress.type == 'skill' %}
                                                    <h6 class="mb-1">New Skill: {{ progress.name }}</h6>
                                                    <p class="text-muted mb-1">
                                                        Added to your skill set
                                                        {% if progress.category %}
                                                            • {{ progress.category }}
                                                        {% endif %}
                                                    </p>
                                                {% elseif progress.type == 'profile' %}
                                                    <h6 class="mb-1">Profile Updated</h6>
                                                    <p class="text-muted mb-1">
                                                        {{ progress.updateDescription }}
                                                    </p>
                                                {% else %}
                                                    <h6 class="mb-1">New Career Goal</h6>
                                                    <p class="text-muted mb-1">
                                                        Set goal: {{ progress.goalDescription }}
                                                    </p>
                                                {% endif %}
                                                
                                                {% if progress.type == 'credential' or progress.type == 'skill' %}
                                                    <div class="d-flex gap-2 mt-2">
                                                        <button class="btn btn-sm btn-outline-primary" onclick="shareAchievement('{{ progress.id }}', '{{ progress.type }}')">
                                                            <i class="bi bi-share me-1"></i>Share
                                                        </button>
                                                        {% if progress.type == 'credential' %}
                                                            <button class="btn btn-sm btn-outline-secondary" onclick="viewCredentialDetails('{{ progress.id }}')">
                                                                <i class="bi bi-eye me-1"></i>View Details
                                                            </button>
                                                        {% endif %}
                                                    </div>
                                                {% endif %}
                                            </div>
                                            <div class="text-end">
                                                <small class="text-muted d-block">{{ progress.dateEarned|date('M j') }}</small>
                                                <small class="text-muted">{{ progress.dateEarned|date('g:i A') }}</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                        {% if recentProgress|length > 5 %}
                            <div class="text-center">
                                <button class="btn btn-outline-secondary btn-sm" onclick="showAllActivity()">
                                    View All Recent Activity
                                </button>
                            </div>
                        {% endif %}
                    {% else %}
                        <div class="text-center py-4">
                            <i class="bi bi-calendar-x text-muted" style="font-size: 3rem;"></i>
                            <h6 class="text-muted mt-2">No recent activity</h6>
                            <p class="text-muted">Complete a micro-credential to see your progress here!</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Career Path + Suggestions -->
        <div class="col-lg-8 mb-4 widget-item" data-widget="careerPath" draggable="true">
            <div class="card widget-card" id="careerPath">
                <div class="widget-header">
                    <h5 class="widget-title">
                        <i class="bi bi-map me-2"></i>Career Roadmap
                    </h5>
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-outline-secondary" onclick="toggleWidget('careerPath')" title="Hide Widget">
                            <i class="bi bi-eye-slash"></i>
                        </button>
                    </div>
                </div>
                <div class="widget-body">
                    {% if careerPaths|length > 0 %}
                        {% for path in careerPaths %}
                            <div class="career-path-card mb-4">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <div>
                                        <h6 class="mb-1">{{ path.jobRole.title }}</h6>
                                        <div class="text-muted small">
                                            {% if path.industry %}
                                                <span class="badge bg-info me-2">{{ path.industry }}</span>
                                            {% endif %}
                                            {% if path.salaryRange %}
                                                <span class="text-success">{{ path.salaryRange }}</span>
                                            {% endif %}
                                        </div>
                                    </div>
                                    <div class="text-end">
                                        <div class="h4 mb-0 text-primary">{{ path.completionPercentage }}%</div>
                                        <small class="text-muted">Complete</small>
                                    </div>
                                </div>

                                <!-- Progress Bar -->
                                <div class="progress mb-3" style="height: 8px;">
                                    <div class="progress-bar bg-primary" role="progressbar" 
                                         style="width: {{ path.completionPercentage }}%"
                                         aria-valuenow="{{ path.completionPercentage }}" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                    </div>
                                </div>

                                <!-- Skills Overview -->
                                <div class="skills-overview mb-3">
                                    <div class="d-flex justify-content-between mb-2">
                                        <small class="text-muted">Required Skills</small>
                                        <small class="text-muted">{{ path.completedSkills }}/{{ path.totalSkills }}</small>
                                    </div>
                                    <div class="d-flex flex-wrap gap-2">
                                        {% for skill in path.jobRole.skills %}
                                            <span class="badge {% if skill in path.missingSkills %}bg-light text-dark border{% else %}bg-success{% endif %}">
                                                {{ skill.name }}
                                            </span>
                                        {% endfor %}
                                    </div>
                                </div>

                                <!-- Missing Skills -->
                                {% if path.missingSkills|length > 0 %}
                                    <div class="missing-skills">
                                        <h6 class="text-muted mb-2">Skills to Develop</h6>
                                        <div class="d-flex flex-wrap gap-2">
                                            {% for skill in path.missingSkills %}
                                                <span class="badge bg-light text-dark border">
                                                    {{ skill.name }}
                                                    {% if skill.category %}
                                                        <small class="text-muted">({{ skill.category }})</small>
                                                    {% endif %}
                                                </span>
                                            {% endfor %}
                                        </div>
                                    </div>
                                {% endif %}

                                <!-- Career Details -->
                                {% if path.yearsOfTraining %}
                                    <div class="mt-3 pt-3 border-top">
                                        <small class="text-muted">
                                            <i class="bi bi-clock me-1"></i>Typical Training: {{ path.yearsOfTraining }} years
                                        </small>
                                    </div>
                                {% endif %}
                            </div>
                        {% endfor %}
                    {% else %}
                        <div class="text-center py-4">
                            <i class="bi bi-map text-muted" style="font-size: 3rem;"></i>
                            <h6 class="text-muted mt-2">No Career Goals Set</h6>
                            <p class="text-muted mb-3">Set your career goals to see your progress roadmap!</p>
                            <button class="btn btn-primary btn-sm" onclick="scrollToWidget('careerExplorer')">
                                <i class="bi bi-search me-1"></i>Explore Careers
                            </button>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        <div class="col-lg-4 mb-4 widget-item" data-widget="suggestions" draggable="true">
            <div class="card widget-card" id="suggestions">
                <div class="widget-header">
                    <h5 class="widget-title">
                        <i class="bi bi-lightbulb me-2"></i>AI Suggestions
                    </h5>
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-outline-secondary" onclick="toggleWidget('suggestions')" title="Hide Widget">
                            <i class="bi bi-eye-slash"></i>
                        </button>
                    </div>
                </div>
                <div class="widget-body">
                    {% if aiSuggestions.suggestions is defined and aiSuggestions.suggestions|length > 0 %}
                        <!-- AI Suggestions Content -->
                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="mb-0 text-primary">Career Recommendations</h6>
                                <button class="btn btn-sm btn-outline-primary" onclick="refreshSuggestions()" title="Refresh Suggestions">
                                    <i class="bi bi-arrow-clockwise"></i>
                                </button>
                            </div>
                            
                            {% for suggestion in aiSuggestions.suggestions|slice(0, 3) %}
                                <div class="card border-0 bg-light mb-2">
                                    <div class="card-body p-3">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="card-title mb-1">{{ suggestion.role }}</h6>
                                            <span class="badge bg-success">{{ suggestion.match_score }}% Match</span>
                                        </div>
                                        <p class="card-text small text-muted mb-2">{{ suggestion.reasoning }}</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="text-muted">
                                                <i class="bi bi-currency-dollar me-1"></i>{{ suggestion.salary_range }}
                                            </small>
                                            <small class="text-muted">
                                                <i class="bi bi-graph-up me-1"></i>{{ suggestion.growth_potential }}
                                            </small>
                                        </div>
                                        {% if suggestion.required_skills is defined and suggestion.required_skills|length > 0 %}
                                            <div class="mt-2">
                                                <small class="text-muted">Key Skills:</small>
                                                <div class="mt-1">
                                                    {% for skill in suggestion.required_skills|slice(0, 3) %}
                                                        <span class="badge bg-primary me-1" style="font-size: 0.7rem;">{{ skill }}</span>
                                                    {% endfor %}
                                                </div>
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endfor %}
                        </div>

                        <!-- Next Steps -->
                        {% if aiSuggestions.next_steps is defined and aiSuggestions.next_steps|length > 0 %}
                            <div class="mb-3">
                                <h6 class="text-primary mb-2">Next Steps</h6>
                                <ul class="list-unstyled mb-0">
                                    {% for step in aiSuggestions.next_steps|slice(0, 3) %}
                                        <li class="mb-1">
                                            <i class="bi bi-check-circle text-success me-2"></i>
                                            <small>{{ step }}</small>
                                        </li>
                                    {% endfor %}
                                </ul>
                            </div>
                        {% endif %}

                        <!-- AI Reasoning -->
                        {% if aiSuggestions.reasoning is defined %}
                            <div class="alert alert-info p-2 mb-0">
                                <small>
                                    <i class="bi bi-robot me-1"></i>
                                    <strong>AI Analysis:</strong> {{ aiSuggestions.reasoning }}
                                </small>
                            </div>
                        {% endif %}

                    {% else %}
                        <!-- Loading State -->
                        <div class="text-center py-4" id="suggestionsLoading">
                            <div class="spinner-border text-primary mb-3" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <h6 class="text-muted">Generating AI Suggestions</h6>
                            <p class="text-muted small">Analyzing your skills and career interests...</p>
                        </div>

                        <!-- Error State (hidden by default) -->
                        <div class="text-center py-4" id="suggestionsError" style="display: none;">
                            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 2rem;"></i>
                            <h6 class="text-muted mt-2">Unable to Load Suggestions</h6>
                            <p class="text-muted small">Please try refreshing the page or contact support.</p>
                            <button class="btn btn-sm btn-outline-primary" onclick="refreshSuggestions()">
                                <i class="bi bi-arrow-clockwise me-1"></i>Try Again
                            </button>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .timeline-marker {
        box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);
    }

    .timeline-item:not(:last-child)::after {
        content: '';
        position: absolute;
        left: 19px;
        top: 50px;
        width: 2px;
        height: calc(100% - 50px);
        background: linear-gradient(to bottom, var(--electric-blue), var(--sky-blue));
        opacity: 0.3;
    }

    .timeline-item {
        position: relative;
    }

    .timeline-item:hover .timeline-marker {
        transform: scale(1.1);
        transition: transform 0.2s ease;
    }

    .alert-success {
        background-color: rgba(40, 167, 69, 0.1);
        border: 1px solid rgba(40, 167, 69, 0.2);
        color: var(--soft-green);
    }

    .career-path-card {
        background: #fff;
        border-radius: 8px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .career-path-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .progress {
        background-color: #f0f0f0;
        border-radius: 4px;
        overflow: hidden;
    }

    .progress-bar {
        background: linear-gradient(90deg, var(--electric-blue) 0%, var(--sky-blue) 100%);
        transition: width 0.6s ease;
    }

    .badge {
        font-weight: 500;
        padding: 0.5em 0.8em;
    }

    .badge.bg-success {
        background: linear-gradient(135deg, var(--soft-green) 0%, #34c759 100%) !important;
    }

    .badge.bg-light {
        background: #f8f9fa !important;
        border: 1px solid #dee2e6;
    }

    /* Customization Styles */
    .widget-item {
        transition: all 0.3s ease;
        cursor: grab;
    }

    .widget-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .widget-item.dragging {
        opacity: 0.5;
        transform: rotate(5deg);
        cursor: grabbing;
    }

    .widget-item.drag-over {
        border: 2px dashed var(--electric-blue);
        background-color: rgba(0, 123, 255, 0.05);
    }

    .customization-mode .widget-item {
        border: 2px solid transparent;
        border-radius: 8px;
        padding: 8px;
        margin: -8px;
    }

    .customization-mode .widget-item:hover {
        border-color: var(--electric-blue);
        background-color: rgba(0, 123, 255, 0.05);
    }

    .widget-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .widget-controls {
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .customization-mode .widget-controls {
        opacity: 1;
    }

    .widget-toggle-btn {
        transition: all 0.2s ease;
    }

    .widget-toggle-btn.hidden {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }

    .widget-toggle-btn.hidden:hover {
        background-color: #c82333;
        border-color: #bd2130;
    }

    .drop-zone {
        min-height: 100px;
        border: 2px dashed #dee2e6;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        transition: all 0.2s ease;
    }

    .drop-zone.drag-over {
        border-color: var(--electric-blue);
        background-color: rgba(0, 123, 255, 0.05);
    }

    .drop-zone-text {
        color: #6c757d;
        font-size: 0.9rem;
    }
</style>

<script>
    // Widget configuration
    const widgetConfig = {
        profile: { name: 'Profile Overview', icon: 'bi-person-badge' },
        skillPassport: { name: 'Skill Passport', icon: 'bi-award' },
        recentActivity: { name: 'Recent Activity', icon: 'bi-clock-history' },
        careerPath: { name: 'Career Roadmap', icon: 'bi-map' },
        suggestions: { name: 'AI Suggestions', icon: 'bi-lightbulb' }
    };

    let isCustomizationMode = false;
    let draggedElement = null;

    // Initialize dashboard
    document.addEventListener('DOMContentLoaded', function() {
        initializeDashboard();
        loadUserPreferences();
    });

    function initializeDashboard() {
        // Initialize customization button
        document.getElementById('customizeLayout').addEventListener('click', toggleCustomizationMode);
        
        // Initialize drag and drop
        initializeDragAndDrop();
        
        // Initialize widget controls
        populateWidgetControls();
    }

    function toggleCustomizationMode() {
        isCustomizationMode = !isCustomizationMode;
        const controls = document.getElementById('customizationControls');
        const customizeBtn = document.getElementById('customizeLayout');
        const widgetGrid = document.getElementById('widgetGrid');
        
        if (isCustomizationMode) {
            controls.style.display = 'block';
            customizeBtn.innerHTML = '<i class="bi bi-check me-1"></i>Exit Customization';
            customizeBtn.classList.remove('btn-outline-primary');
            customizeBtn.classList.add('btn-success');
            widgetGrid.classList.add('customization-mode');
            showWidgetControls();
        } else {
            controls.style.display = 'none';
            customizeBtn.innerHTML = '<i class="bi bi-grid-3x3-gap me-1"></i>Customize';
            customizeBtn.classList.remove('btn-success');
            customizeBtn.classList.add('btn-outline-primary');
            widgetGrid.classList.remove('customization-mode');
            hideWidgetControls();
        }
    }

    function initializeDragAndDrop() {
        const widgetGrid = document.getElementById('widgetGrid');
        const widgets = widgetGrid.querySelectorAll('.widget-item');
        
        widgets.forEach(widget => {
            widget.addEventListener('dragstart', handleDragStart);
            widget.addEventListener('dragend', handleDragEnd);
            widget.addEventListener('dragover', handleDragOver);
            widget.addEventListener('dragenter', handleDragEnter);
            widget.addEventListener('dragleave', handleDragLeave);
            widget.addEventListener('drop', handleDrop);
        });
    }

    function handleDragStart(e) {
        if (!isCustomizationMode) return;
        
        draggedElement = this;
        this.classList.add('dragging');
        e.dataTransfer.effectAllowed = 'move';
        e.dataTransfer.setData('text/html', this.outerHTML);
    }

    function handleDragEnd(e) {
        if (!isCustomizationMode) return;
        
        this.classList.remove('dragging');
        draggedElement = null;
        
        // Remove drag-over styling from all widgets
        document.querySelectorAll('.widget-item').forEach(widget => {
            widget.classList.remove('drag-over');
        });
    }

    function handleDragOver(e) {
        if (!isCustomizationMode) return;
        
        e.preventDefault();
        e.dataTransfer.dropEffect = 'move';
    }

    function handleDragEnter(e) {
        if (!isCustomizationMode) return;
        
        e.preventDefault();
        this.classList.add('drag-over');
    }

    function handleDragLeave(e) {
        if (!isCustomizationMode) return;
        
        // Only remove if we're leaving the widget entirely
        if (!this.contains(e.relatedTarget)) {
            this.classList.remove('drag-over');
        }
    }

    function handleDrop(e) {
        if (!isCustomizationMode) return;
        
        e.preventDefault();
        this.classList.remove('drag-over');
        
        if (draggedElement && draggedElement !== this) {
            const allWidgets = Array.from(document.querySelectorAll('.widget-item'));
            const draggedIndex = allWidgets.indexOf(draggedElement);
            const dropIndex = allWidgets.indexOf(this);
            
            if (draggedIndex < dropIndex) {
                this.parentNode.insertBefore(draggedElement, this.nextSibling);
            } else {
                this.parentNode.insertBefore(draggedElement, this);
            }
            
            saveUserPreferences();
        }
    }

    function populateWidgetControls() {
        const controlsContainer = document.getElementById('widgetControls');
        controlsContainer.innerHTML = '';
        
        Object.entries(widgetConfig).forEach(([widgetId, config]) => {
            const control = document.createElement('button');
            control.className = 'btn btn-sm btn-outline-primary widget-toggle-btn';
            control.setAttribute('data-widget', widgetId);
            control.innerHTML = `<i class="bi ${config.icon} me-1"></i>${config.name}`;
            control.onclick = () => toggleWidget(widgetId);
            controlsContainer.appendChild(control);
        });
    }

    function toggleWidget(widgetId) {
        const widget = document.querySelector(`[data-widget="${widgetId}"]`);
        const control = document.querySelector(`[data-widget="${widgetId}"].widget-toggle-btn`);
        
        if (widget.style.display === 'none') {
            widget.style.display = 'block';
            control.classList.remove('hidden');
            control.innerHTML = `<i class="bi ${widgetConfig[widgetId].icon} me-1"></i>${widgetConfig[widgetId].name}`;
        } else {
            widget.style.display = 'none';
            control.classList.add('hidden');
            control.innerHTML = `<i class="bi bi-eye me-1"></i>Show ${widgetConfig[widgetId].name}`;
        }
        
        saveUserPreferences();
    }

    function showWidgetControls() {
        document.querySelectorAll('.widget-controls').forEach(control => {
            control.style.display = 'block';
        });
    }

    function hideWidgetControls() {
        document.querySelectorAll('.widget-controls').forEach(control => {
            control.style.display = 'none';
        });
    }

    function saveUserPreferences() {
        const preferences = {
            layout: getWidgetOrder(),
            visibility: getWidgetVisibility(),
            timestamp: new Date().toISOString()
        };
        
        // Save to localStorage for immediate access
        localStorage.setItem('dashboardPreferences', JSON.stringify(preferences));
        
        // Also save to server for persistence across sessions
        fetch('{{ path("app_dashboard_save_preferences") }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify(preferences)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show save confirmation
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Layout saved!',
                    showConfirmButton: false,
                    timer: 2000
                });
            } else {
                console.error('Failed to save preferences:', data.message);
            }
        })
        .catch(error => {
            console.error('Error saving preferences:', error);
            // Still show success for localStorage save
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: 'Layout saved locally!',
                showConfirmButton: false,
                timer: 2000
            });
        });
    }

    function getWidgetOrder() {
        const widgets = document.querySelectorAll('.widget-item');
        return Array.from(widgets).map(widget => widget.dataset.widget);
    }

    function getWidgetVisibility() {
        const visibility = {};
        Object.keys(widgetConfig).forEach(widgetId => {
            const widget = document.querySelector(`[data-widget="${widgetId}"]`);
            visibility[widgetId] = widget.style.display !== 'none';
        });
        return visibility;
    }

    function loadUserPreferences() {
        // Try to load from server first
        fetch('{{ path("app_dashboard_load_preferences") }}', {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.preferences) {
                // Apply server preferences
                applyPreferences(data.preferences);
            } else {
                // Fall back to localStorage
                loadFromLocalStorage();
            }
        })
        .catch(error => {
            console.error('Error loading server preferences:', error);
            // Fall back to localStorage
            loadFromLocalStorage();
        });
    }

    function loadFromLocalStorage() {
        const saved = localStorage.getItem('dashboardPreferences');
        if (saved) {
            try {
                const preferences = JSON.parse(saved);
                applyPreferences(preferences);
            } catch (error) {
                console.error('Error loading localStorage preferences:', error);
            }
        }
    }

    function applyPreferences(preferences) {
        // Apply layout order
        if (preferences.layout) {
            applyWidgetOrder(preferences.layout);
        }
        
        // Apply visibility settings
        if (preferences.visibility) {
            applyWidgetVisibility(preferences.visibility);
        }
    }

    function applyWidgetOrder(order) {
        const widgetGrid = document.getElementById('widgetGrid');
        order.forEach(widgetId => {
            const widget = widgetGrid.querySelector(`[data-widget="${widgetId}"]`);
            if (widget) {
                widgetGrid.appendChild(widget);
            }
        });
    }

    function applyWidgetVisibility(visibility) {
        Object.entries(visibility).forEach(([widgetId, isVisible]) => {
            const widget = document.querySelector(`[data-widget="${widgetId}"]`);
            const control = document.querySelector(`[data-widget="${widgetId}"].widget-toggle-btn`);
            
            if (widget && control) {
                if (!isVisible) {
                    widget.style.display = 'none';
                    control.classList.add('hidden');
                    control.innerHTML = `<i class="bi bi-eye me-1"></i>Show ${widgetConfig[widgetId].name}`;
                }
            }
        });
    }

    function saveCustomization() {
        saveUserPreferences();
    }

    function resetCustomization() {
        Swal.fire({
            title: 'Reset Dashboard Layout?',
            text: 'This will restore the default layout and visibility settings.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, reset it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                localStorage.removeItem('dashboardPreferences');
                location.reload();
            }
        });
    }

    function exitCustomization() {
        toggleCustomizationMode();
    }

    // Scroll to widget function
    function scrollToWidget(widgetId) {
        const widget = document.getElementById(widgetId);
        if (widget) {
            widget.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }

    // Show all credentials function
    function showAllCredentials() {
        Swal.fire({
            title: 'All Credentials',
            html: `
                <div class="text-start">
                    <p>You have <strong>{{ studentProgress|length }}</strong> credentials in your portfolio.</p>
                    <p>View your complete credential history and achievements in your Skill Passport.</p>
                </div>
            `,
            icon: 'info',
            confirmButtonText: 'View Skill Passport',
            showCancelButton: true,
            cancelButtonText: 'Close'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '{{ path("app_skill_passport") }}';
            }
        });
    }

    // Browse available credentials - with null check
    const browseButton = document.querySelector('button.btn-primary');
    if (browseButton) {
        browseButton.addEventListener('click', function() {
            window.location.href = '{{ path("app_skill_passport") }}';
        });
    }

    // View all recent activity
    function showAllActivity() {
        Swal.fire({
            title: 'Recent Activity',
            html: `
                <div class="text-start">
                    <p>This feature is coming soon! For now, you can view your complete activity history in your Skill Passport.</p>
                </div>
            `,
            icon: 'info',
            confirmButtonText: 'View Skill Passport',
            showCancelButton: true,
            cancelButtonText: 'Close'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '{{ path("app_skill_passport") }}';
            }
        });
    }

    function shareAchievement(id, type) {
        const shareUrl = type === 'credential' 
            ? `${window.location.origin}/dashboard/skill-passport/credential/${id}`
            : `${window.location.origin}/dashboard/skill-passport/skill/${id}`;
        
        Swal.fire({
            title: 'Share Achievement',
            html: `
                <div class="text-start">
                    <p>Share your achievement on social media or copy the link:</p>
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" value="${shareUrl}" readonly>
                        <button class="btn btn-outline-secondary" type="button" onclick="copyShareLink('${shareUrl}')">
                            <i class="bi bi-clipboard"></i>
                        </button>
                    </div>
                    <div class="d-flex gap-2 justify-content-center">
                        <button class="btn btn-outline-primary" onclick="shareOnLinkedIn('${shareUrl}')">
                            <i class="bi bi-linkedin"></i> LinkedIn
                        </button>
                        <button class="btn btn-outline-info" onclick="shareOnTwitter('${shareUrl}')">
                            <i class="bi bi-twitter"></i> Twitter
                        </button>
                    </div>
                </div>
            `,
            showConfirmButton: false,
            showCloseButton: true
        });
    }

    function copyShareLink(url) {
        navigator.clipboard.writeText(url).then(() => {
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: 'Link copied to clipboard!',
                showConfirmButton: false,
                timer: 2000
            });
        });
    }

    function shareOnLinkedIn(url) {
        const linkedInUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`;
        window.open(linkedInUrl, '_blank');
    }

    function shareOnTwitter(url) {
        const twitterUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=I just earned a new credential on Pathway+!`;
        window.open(twitterUrl, '_blank');
    }

    function viewCredentialDetails(id) {
        fetch(`/dashboard/skill-passport/credential/${id}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('credentialModalContent').innerHTML = data.html;
                    const modal = new bootstrap.Modal(document.getElementById('credentialModal'));
                    modal.show();
                }
            })
            .catch(error => {
                console.error('Error loading credential details:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Could not load credential details. Please try again.',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            });
    }

    function refreshSuggestions() {
        const suggestionsWidget = document.getElementById('suggestions');
        const widgetBody = suggestionsWidget.querySelector('.widget-body');
        
        // Show loading state
        widgetBody.innerHTML = `
            <div class="text-center py-4" id="suggestionsLoading">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <h6 class="text-muted">Refreshing AI Suggestions</h6>
                <p class="text-muted small">Analyzing your latest progress...</p>
            </div>
        `;

        // Make AJAX request to refresh suggestions
        fetch('{{ path("app_dashboard_refresh_suggestions") }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.suggestions) {
                // Update the suggestions widget with new data
                updateSuggestionsWidget(data.suggestions);
                
                // Show success message
                Swal.fire({
                    icon: 'success',
                    title: 'Suggestions Updated!',
                    text: 'Your AI recommendations have been refreshed with the latest data.',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            } else {
                throw new Error(data.error || 'Failed to refresh suggestions');
            }
        })
        .catch(error => {
            console.error('Error refreshing suggestions:', error);
            
            // Show error state
            widgetBody.innerHTML = `
                <div class="text-center py-4" id="suggestionsError">
                    <i class="bi bi-exclamation-triangle text-warning" style="font-size: 2rem;"></i>
                    <h6 class="text-muted mt-2">Unable to Refresh Suggestions</h6>
                    <p class="text-muted small">Please try again or contact support if the problem persists.</p>
                    <button class="btn btn-sm btn-outline-primary" onclick="refreshSuggestions()">
                        <i class="bi bi-arrow-clockwise me-1"></i>Try Again
                    </button>
                </div>
            `;
        });
    }

    function updateSuggestionsWidget(suggestions) {
        const suggestionsWidget = document.getElementById('suggestions');
        const widgetBody = suggestionsWidget.querySelector('.widget-body');
        
        if (suggestions.suggestions && suggestions.suggestions.length > 0) {
            let html = `
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h6 class="mb-0 text-primary">Career Recommendations</h6>
                        <button class="btn btn-sm btn-outline-primary" onclick="refreshSuggestions()" title="Refresh Suggestions">
                            <i class="bi bi-arrow-clockwise"></i>
                        </button>
                    </div>
            `;
            
            // Add suggestions
            suggestions.suggestions.slice(0, 3).forEach(suggestion => {
                html += `
                    <div class="card border-0 bg-light mb-2">
                        <div class="card-body p-3">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h6 class="card-title mb-1">${suggestion.role}</h6>
                                <span class="badge bg-success">${suggestion.match_score}% Match</span>
                            </div>
                            <p class="card-text small text-muted mb-2">${suggestion.reasoning}</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <i class="bi bi-currency-dollar me-1"></i>${suggestion.salary_range}
                                </small>
                                <small class="text-muted">
                                    <i class="bi bi-graph-up me-1"></i>${suggestion.growth_potential}
                                </small>
                            </div>
                `;
                
                if (suggestion.required_skills && suggestion.required_skills.length > 0) {
                    html += `
                        <div class="mt-2">
                            <small class="text-muted">Key Skills:</small>
                            <div class="mt-1">
                    `;
                    suggestion.required_skills.slice(0, 3).forEach(skill => {
                        html += `<span class="badge bg-primary me-1" style="font-size: 0.7rem;">${skill}</span>`;
                    });
                    html += `
                            </div>
                        </div>
                    `;
                }
                
                html += `
                        </div>
                    </div>
                `;
            });
            
            html += `</div>`;
            
            // Add next steps
            if (suggestions.next_steps && suggestions.next_steps.length > 0) {
                html += `
                    <div class="mb-3">
                        <h6 class="text-primary mb-2">Next Steps</h6>
                        <ul class="list-unstyled mb-0">
                `;
                suggestions.next_steps.slice(0, 3).forEach(step => {
                    html += `
                        <li class="mb-1">
                            <i class="bi bi-check-circle text-success me-2"></i>
                            <small>${step}</small>
                        </li>
                    `;
                });
                html += `
                        </ul>
                    </div>
                `;
            }
            
            // Add AI reasoning
            if (suggestions.reasoning) {
                html += `
                    <div class="alert alert-info p-2 mb-0">
                        <small>
                            <i class="bi bi-robot me-1"></i>
                            <strong>AI Analysis:</strong> ${suggestions.reasoning}
                        </small>
                    </div>
                `;
            }
            
            widgetBody.innerHTML = html;
        } else {
            // Show error state if no suggestions
            widgetBody.innerHTML = `
                <div class="text-center py-4" id="suggestionsError">
                    <i class="bi bi-exclamation-triangle text-warning" style="font-size: 2rem;"></i>
                    <h6 class="text-muted mt-2">No Suggestions Available</h6>
                    <p class="text-muted small">Try adding more skills or career interests to get personalized recommendations.</p>
                    <button class="btn btn-sm btn-outline-primary" onclick="refreshSuggestions()">
                        <i class="bi bi-arrow-clockwise me-1"></i>Try Again
                    </button>
                </div>
            `;
        }
    }
</script>

{% endblock %}
